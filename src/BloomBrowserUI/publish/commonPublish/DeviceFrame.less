// didn't help with the Bloom vs. modern browser disparity (see  &:after below)
// : @import "../../node_modules/normalize.css/normalize.css";

@phoneFeaturesColor: #ababab;
@bezelWidth: 10px;
@speaker-length : 80px; // prettier extension changes speakerLength to speakerlength. So weird.
@speakerHeight: 5px;

@scale: 20;
@buttonScale: 0.2;
// gets filled by the components children, if there are any

.deviceAndControls {
    display: flex;
    flex-direction: row;
}

.deviceFrame {
    --screenHeight: calc(16px * @scale);
    --screenWidth: calc(9px * @scale);

    background: rgb(241, 241, 241);
    box-sizing: content-box; // Our width & height are sizing the screen (the glass). All the bezel and stuff doesn't count.
    width: var(--screenWidth);
    height: var(--screenHeight);
    border-width: @bezelWidth;
    border-style: solid;
    border-color: #636363;
    border-top-width: 20px;
    border-bottom-width: 20px;
    border-radius: 15px;

    position: relative;
    flex-direction: column;
    flex-shrink: 0;

    display: flex !important;
    --scale: 1;

    &.orientation-button {
        --scale: @buttonScale;
        //            margin-top: auto;
        transform: scale(@buttonScale);
    }

    &.portrait iframe {
        width: 100%;
        height: 100%;
    }
    &.landscape {
        transform-origin: top left;
        transform: translate(0, 200px /* down*/)
            rotate(-90deg /*counter clockwise*/) scale(var(--scale));

        iframe {
            // To simulate the device noticing that it rotated (and thus rotating the screen),
            // we have to then de-rotate the contents of the frame:
            transform: rotate(90deg) translate(70px, 70px);
            height: 55%; // roughly 9/16, fine tuned
            width: 176%; // roughly 16/9
            flex-shrink: 0;
        }
    }

    // speaker
    &:before {
        --speakerWidth: ~"calc(var(--screenWidth) / 3)";
        width: var(--speakerWidth);
        height: @speakerHeight;
        margin-top: -12px;
        margin-left: ~"calc((var(--screenWidth)/2) - (var(--speakerWidth)/2))";
        border-radius: @speakerHeight;
        background-color: @phoneFeaturesColor;
        content: "";
        position: absolute;
    }
}
