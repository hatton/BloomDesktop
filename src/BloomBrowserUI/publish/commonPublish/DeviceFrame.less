@phoneFeaturesColor: #ababab;
@buttonDiameter: 20px;
@bezelWidth: 10px;
@speaker-length : 80px; // prettier extension changes speakerLength to speakerlength. So weird.
@speakerHeight: 5px;

@scale: 20;
@height: calc(~"16px" * @scale);
// gets filled by the components children, if there are any

.deviceAndControls {
    display: flex;
    flex-direction: row;

    .orientation-button {
        height: 50px;
        margin-top: auto;
    }
}

.deviceFrame {
    background: rgb(241, 241, 241);
    width: calc(~"9px" * @scale);
    height: @height;
    border-width: @bezelWidth;
    border-style: solid;
    border-color: #636363;
    border-top-width: 20px;
    border-bottom-width: 35px;
    border-radius: 15px;
    display: flex;
    &.portrait iframe {
        width: 100%;
        height: 100%;
    }
    &.landscape {
        transform-origin: top left;
        transform: translate(0, 200px /* down*/)
            rotate(-90deg /*counter clockwise*/);
        iframe {
            // To simulate the device noticing that it rotated (and thus rotating the screen),
            // we have to then de-rotate the contents of the frame:
            transform: rotate(90deg) translate(70px, 70px);
            height: 55%; // roughly 9/16, fine tuned
            width: 176%; // roughly 16/9
            flex-shrink: 0;
        }
    }

    // speaker
    &:before {
        width: @speaker-length;
        height: @speakerHeight;
        margin-top: -12px;
        margin-left: calc((~"9px" * @scale - @speaker-length) / 2);
        border-radius: @speakerHeight;
        background-color: @phoneFeaturesColor;
        content: "";
        position: absolute;
    }

    //the bottom 'button' (looks like phone home button) is the "after" rule
    &:after {
        width: @buttonDiameter;
        height: @buttonDiameter;
        border-radius: 50%;
        //border: solid 5px @LightGrey;
        background: @phoneFeaturesColor;
        margin-left: calc((~"9px" * @scale - @buttonDiameter) / 2);
        margin-top: calc(@height + 10px);
        content: "";
        position: absolute;
    }
}
